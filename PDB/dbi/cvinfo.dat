/*leaf start*/
t1(LF_MODIFIER_16t , Modifier_16t    , type)
tf(LF_POINTER_16t  , Pointer_16t      )
t2(LF_ARRAY_16t    , Array_16t       , elemtype, idxtype)
t3(LF_CLASS_16t    , Class_16t       , field, derived, vshape)
t3(LF_STRUCTURE_16t, Structure_16t   , field, derived, vshape)
t1(LF_UNION_16t    , Union_16t       , field)
t2(LF_ENUM_16t     , Enum_16t        , utype, field)
t2(LF_PROCEDURE_16t, Proc_16t        , rvtype, arglist)
t4(LF_MFUNCTION_16t, MFunc_16t       , rvtype, classtype, thistype, arglist)
t0(LF_VTSHAPE)
t1(LF_COBOL0_16t   , Cobol0_16t      , type)
t0(LF_COBOL1) 
t1(LF_BARRAY_16t   , BArray_16t      , utype)
t0(LF_LABEL)
t0(LF_NULL)
t0(LF_NOTTRAN)
t2(LF_DIMARRAY_16t , DimArray_16t    , utype, diminfo)
tf(LF_VFTPATH_16t  , VFTPath_16t         )
t0(LF_PRECOMP_16t)
t0(LF_ENDPRECOMP)
tn(LF_OEM_16t      , OEM_16t         , count, index)
t0(LF_TYPESERVER_ST)

t1(LF_SKIP_16t     , Skip_16t        , type)
tn(LF_ARGLIST_16t  , ArgList_16t     , count, arg)
t1(LF_DEFARG_16t   , DefArg_16t      , type)
tf(LF_LIST, List)
t0(LF_FIELDLIST_16t)
tn(LF_DERIVED_16t  , Derived_16t     , count, drvdcls)
t1(LF_BITFIELD_16t , Bitfield_16t    , type)
tf(LF_METHODLIST_16t, MethodList_16t)
t1(LF_DIMCONU_16t  , DimCon_16t      , typ)
t1x(LF_DIMCONLU_16t, DimCon_16t      , typ)
tf(LF_DIMVARU_16t  , DimVarU_16t)
tf(LF_DIMVARLU_16t , DimVarLU_16t)
t0(LF_REFSYM) // ???

t1m(LF_BCLASS_16t, BClass_16t, index, pbNum(&p->offset))
t2m(LF_VBCLASS_16t, VBClass_16t, index, vbptr, pbNum(pbNum(&p->vbpoff)))
t2x(LF_IVBCLASS_16t, VBClass_16t, index, vbptr)
t0m(LF_ENUMERATE_ST, EnumerateSt, pbName(pbNum(&p->value)))
t1m(LF_FRIENDFCN_16t, FriendFcn_16t, index, pbName(&p->Name))
t1m(LF_INDEX_16t, Index_16t, index, &p->index + 1)
t1m(LF_MEMBER_16t, Member_16t, index, pbName(pbNum(&p->offset)))
t1m(LF_STMEMBER_16t, STMember_16t, index, pbName(&p->Name))
t1m(LF_METHOD_16t, Method_16t, mList, pbName(&p->Name))
t1m(LF_NESTTYPE_16t, NestType_16t, index, pbName(&p->Name))
t1m(LF_VFUNCTAB_16t, VFuncTab_16t, type, &p->type + 1)
t1m(LF_FRIENDCLS_16t, FriendCls_16t, index, &p->index + 1)
t1m(LF_ONEMETHOD_16t, OneMethod_16t, index, pbOneMethodNameSt_16t(p))
t1m(LF_VFUNCOFF_16t, VFuncOff_16t, type, &p->offset + 1)
t0(LF_NESTTYPEEX_16t) // ???
t0(LF_MEMBERMODIFY_16t) // 0x040f

t1(LF_MODIFIER , Modifier    , type)
tf(LF_POINTER  , Pointer      )
t2(LF_ARRAY_ST , ArraySt       , elemtype, idxtype)
t3(LF_CLASS_ST , ClassSt       , field, derived, vshape)
t3(LF_STRUCTURE_ST, StructureSt   , field, derived, vshape)
t1(LF_UNION_ST    , UnionSt       , field)
t2(LF_ENUM_ST     , EnumSt        , utype, field)
t2(LF_PROCEDURE, Proc        , rvtype, arglist)
t4(LF_MFUNCTION, MFunc       , rvtype, classtype, thistype, arglist)
t1(LF_COBOL0   , Cobol0      , type) 
t1(LF_BARRAY   , BArray      , utype)
t2(LF_DIMARRAY_ST , DimArraySt , utype, diminfo)
tf(LF_VFTPATH  , VFTPath         )
t0(LF_PRECOMP_ST)
tn(LF_OEM      , OEM         , count, index)
t1(LF_ALIAS_ST,  AliasSt       , utype)
tn(LF_OEM2     , OEM2        , count, index)

t1(LF_SKIP     , Skip        , type)
tn(LF_ARGLIST  , ArgList     , count, arg)
t1(LF_DEFARG_ST , DefArgSt      , type)
t0(LF_FIELDLIST)
tn(LF_DERIVED  , Derived     , count, drvdcls)
t1(LF_BITFIELD , Bitfield    , type)
tf(LF_METHODLIST, MethodList)
t1(LF_DIMCONU  , DimCon      , typ)
t1x(LF_DIMCONLU, DimCon      , typ)
tf(LF_DIMVARU  , DimVarU)
tf(LF_DIMVARLU , DimVarLU)

t1m(LF_BCLASS, BClass, index, pbNum(&p->offset))
t2m(LF_VBCLASS, VBClass, index, vbptr, pbNum(pbNum(&p->vbpoff)))
t2x(LF_IVBCLASS, VBClass, index, vbptr)
t1m(LF_FRIENDFCN_ST, FriendFcnSt, index, pbName(&p->Name))
t1m(LF_INDEX, Index, index, &p->index + 1)
t1m(LF_MEMBER_ST, MemberSt, index, pbName(pbNum(&p->offset)))
t1m(LF_STMEMBER_ST, STMemberSt, index, pbName(&p->Name))
t1m(LF_METHOD_ST, MethodSt, mList, pbName(&p->Name))
t1m(LF_NESTTYPE_ST, NestTypeSt, index, pbName(&p->Name))
t1m(LF_VFUNCTAB, VFuncTab, type, &p->type + 1)
t1m(LF_FRIENDCLS, FriendCls, index, &p->index + 1)
t1m(LF_ONEMETHOD_ST, OneMethodSt, index, pbOneMethodNameSt(p))
t1m(LF_VFUNCOFF, VFuncOff, type, &p->offset + 1)
t0(LF_NESTTYPEEX_ST) // ???
t0(LF_MEMBERMODIFY_ST) // ???
t0(LF_MANAGED_ST) // ???

t0(LF_TYPESERVER)
t0m(LF_ENUMERATE, Enumerate, pbName(pbNum(&p->value)))
t2(LF_ARRAY , Array       , elemtype, idxtype)
t3(LF_CLASS , Class       , field, derived, vshape)
t3(LF_STRUCTURE, Structure   , field, derived, vshape)
t1(LF_UNION    , Union       , field)
t2(LF_ENUM     , Enum        , utype, field)
t2(LF_DIMARRAY , DimArray , utype, diminfo)
t0(LF_PRECOMP)
t1(LF_ALIAS,  Alias       , utype)
t1(LF_DEFARG , DefArg      , type)
t1m(LF_FRIENDFCN, FriendFcn, index, pbName(&p->Name))
t1m(LF_MEMBER, Member, index, pbName(pbNum(&p->offset)))
t1m(LF_STMEMBER, STMember, index, pbName(&p->Name))
t1m(LF_METHOD, Method, mList, pbName(&p->Name))
t1m(LF_NESTTYPE, NestType, index, pbName(&p->Name))
t1m(LF_ONEMETHOD, OneMethod, index, pbOneMethodNameSt(p))
t0(LF_NESTTYPEEX) // ???
t0(LF_MEMBERMODIFY) // ???
t0(LF_MANAGED) // ???

t0(LF_TYPESERVER2)
t2(LF_STRIDED_ARRAY , StridedArray , elemtype, idxtype)
t1(LF_HLSL,  HLSL , subtype)
t1(LF_MODIFIER_EX,  ModifierEx  , type)
t3(LF_INTERFACE, Interface   , field, derived, vshape)
t1m(LF_BINTERFACE , BInterface , index,pbNum(&p->offset))
t1(LF_VECTOR,  Vector , elemtype)
t0(LF_MATRIX)
t2(LF_VFTABLE,Vftable,type,baseVftable)
/*leaf end*/










/*sym start*/

s0(S_COMPILE, TRUE)
s1(S_REGISTER_16t, REGSYM_16t, typind, FALSE)
s1f(S_CONSTANT_16t, CONSTSYM_16t, typind, TRUE, stConstantName)
s1(S_UDT_16t, UDTSYM_16t, typind, TRUE)
s0(S_SSEARCH, TRUE)
s0(S_END, TRUE)
s0(S_SKIP, FALSE)
s0(S_CVRESERVE, FALSE)
s0n(S_OBJNAME_ST, OBJNAMESYM, TRUE)
s0(S_ENDARG, FALSE)
s1x(S_COBOLUDT_16t, UDTSYM_16t, typind, TRUE)
s1f(S_MANYREG_16t, MANYREGSYM_16t, typind, FALSE, stManyRegName )
s0(S_RETURN, FALSE)
s0(S_ENTRYTHIS, FALSE)

s1(S_BPREL16, BPRELSYM16, typind, FALSE)
s1(S_LDATA16, DATASYM16, typind, FALSE)
s1(S_GDATA16, PUBSYM16, typind, TRUE)
s0(S_PUB16, FALSE)
s1(S_LPROC16,  PROCSYM16, typind, FALSE)
s1x(S_GPROC16,  PROCSYM16, typind, TRUE)
s0n(S_THUNK16, THUNKSYM16, TRUE)
s0n(S_BLOCK16, BLOCKSYM16, FALSE)
s0(S_WITH16, FALSE)
s0n(S_LABEL16, LABELSYM16, TRUE)
s0(S_CEXMODEL16, TRUE)
s2(S_VFTABLE16, VPATHSYM16, root, path, TRUE)
s1(S_REGREL16, REGREL16, typind, FALSE)

s1(S_BPREL32_16t, BPRELSYM32_16t, typind, FALSE)
s1(S_LDATA32_16t, DATASYM32_16t, typind, FALSE)
s1x(S_GDATA32_16t, DATASYM32_16t, typind, TRUE)
s1x(S_PUB32_16t, DATASYM32_16t, typind, TRUE)
s1x(S_LPROC32_16t, PROCSYM32_16t, typind, FALSE)
s1(S_GPROC32_16t, PROCSYM32_16t, typind, TRUE)
s0n(S_THUNK32_ST, THUNKSYM32, TRUE)
s0n(S_BLOCK32_ST, BLOCKSYM32, FALSE)
s0(S_WITH32_ST, FALSE)
s0n(S_LABEL32_ST, LABELSYM32, TRUE)
s0(S_CEXMODEL32, TRUE)
s2(S_VFTABLE32_16t, VPATHSYM32_16t, root, path, TRUE)
s1(S_REGREL32_16t, REGREL32_16t, typind, FALSE)
s1(S_LTHREAD32_16t, THREADSYM32_16t, typind, FALSE)
s1x(S_GTHREAD32_16t, THREADSYM32_16t, typind, TRUE)
s0(S_SLINK32, FALSE)

s1x(S_LPROCMIPS_16t, PROCSYMMIPS_16t, typind, FALSE)
s1(S_GPROCMIPS_16t, PROCSYMMIPS_16t, typind, TRUE)

s0f(S_PROCREF_ST, TRUE, stProcRefName)
s0(S_DATAREF_ST, TRUE)
s0(S_ALIGN, FALSE)
s0f(S_LPROCREF_ST, FALSE, stProcRefName)
s0(S_OEM, FALSE)

/*s0(S_TI16_MAX, FALSE)*/

s1(S_REGISTER_ST, REGSYMST, typind, FALSE)
s1f(S_CONSTANT_ST, CONSTSYMST, typind, TRUE, stConstantName)
s1(S_UDT_ST, UDTSYMST, typind, TRUE)
s1x(S_COBOLUDT_ST, UDTSYMST, typind, TRUE)
s1f(S_MANYREG_ST, MANYREGSYMST, typind, FALSE, stManyRegName )
s1(S_BPREL32_ST, BPRELSYM32ST, typind, FALSE)
s1(S_LDATA32_ST, DATASYM32ST, typind, FALSE)
s1x(S_GDATA32_ST, DATASYM32ST, typind, TRUE)
s1x(S_PUB32_ST, DATASYM32ST, typind, TRUE)
s1x(S_LPROC32_ST, PROCSYM32ST, typind, FALSE)
s1(S_GPROC32_ST, PROCSYM32ST, typind, TRUE)
s2(S_VFTABLE32, VPATHSYM32, root, path, TRUE)
s1(S_REGREL32_ST, REGREL32ST, typind, FALSE)
s1(S_LTHREAD32_ST, THREADSYM32ST, typind, FALSE)
s1x(S_GTHREAD32_ST, THREADSYM32ST, typind, TRUE)
s1x(S_LPROCMIPS_ST, PROCSYMMIPSST, typind, FALSE)
s1(S_GPROCMIPS_ST, PROCSYMMIPSST, typind, TRUE)
s0(S_FRAMEPROC, FALSE)
s0(S_COMPILE2_ST, FALSE)
s0(S_MANYREG2_ST, FALSE)
s0(S_LPROCIA64_ST, FALSE)
s0(S_GPROCIA64_ST, FALSE)
s0(S_LOCALSLOT_ST, FALSE)
s0(S_PARAMSLOT_ST, FALSE)
s0(S_ANNOTATION, FALSE)
s0(S_GMANPROC_ST, FALSE)
s0(S_LMANPROC_ST, FALSE)
s0(S_RESERVED1, FALSE)
s0(S_RESERVED2, FALSE)
s0(S_RESERVED3, FALSE)
s0(S_RESERVED4, FALSE)
s0(S_LMANDATA_ST, FALSE)
s0(S_GMANDATA_ST, FALSE)
s0(S_MANFRAMEREL_ST, FALSE)
s0(S_MANREGISTER_ST, FALSE)
s0(S_MANSLOT_ST, FALSE)
s0(S_MANMANYREG_ST, FALSE)
s0(S_MANREGREL_ST, FALSE)
s0(S_MANMANYREG2_ST, FALSE)
s0(S_MANTYPREF, FALSE)
s0(S_UNAMESPACE_ST, FALSE)

/*s0(S_ST_MAX, FALSE)*/

s0n(S_OBJNAME, OBJNAMESYM, TRUE)
s0n(S_THUNK32, THUNKSYM32, TRUE)
s0n(S_BLOCK32, BLOCKSYM32, FALSE)
s0(S_WITH32, FALSE)
s0n(S_LABEL32, LABELSYM32, TRUE)
s1(S_REGISTER, REGSYM, typind, FALSE)
s1f(S_CONSTANT, CONSTSYM, typind, TRUE, stConstantName)
s1(S_UDT, UDTSYM, typind, TRUE)
s1x(S_COBOLUDT, UDTSYM, typind, TRUE)
s1f(S_MANYREG, MANYREGSYM, typind, FALSE, stManyRegName )
s1(S_BPREL32, BPRELSYM32, typind, FALSE)
s1(S_LDATA32, DATASYM32, typind, FALSE)
s1x(S_GDATA32, DATASYM32, typind, TRUE)
s1x(S_PUB32, DATASYM32, typind, TRUE)
s1x(S_LPROC32, PROCSYM32, typind, FALSE)
s1(S_GPROC32, PROCSYM32, typind, TRUE)
s1(S_REGREL32, REGREL32, typind, FALSE)
s1(S_LTHREAD32, THREADSYM32, typind, FALSE)
s1x(S_GTHREAD32, THREADSYM32, typind, TRUE)
s1x(S_LPROCMIPS, PROCSYMMIPS, typind, FALSE)
s1(S_GPROCMIPS, PROCSYMMIPS, typind, TRUE)
s0(S_COMPILE2, FALSE)
s0(S_MANYREG2, FALSE)
s0(S_LPROCIA64, FALSE)
s0(S_GPROCIA64, FALSE)
s0(S_LOCALSLOT, FALSE)
s0(S_PARAMSLOT, FALSE)
s0(S_LMANDATA, FALSE)
s0(S_GMANDATA, FALSE)
s0(S_MANFRAMEREL, FALSE)
s0(S_MANREGISTER, FALSE)
s0(S_MANSLOT, FALSE)
s0(S_MANMANYREG, FALSE)
s0(S_MANREGREL, FALSE)
s0(S_MANMANYREG2, FALSE)
s0(S_UNAMESPACE, FALSE)
s0f(S_PROCREF, TRUE, stProcRefName)
s0(S_DATAREF, TRUE)
s0f(S_LPROCREF, FALSE, stProcRefName)
s0(S_ANNOTATIONREF, FALSE)
s0(S_TOKENREF, FALSE)
s0(S_GMANPROC, FALSE)
s0(S_LMANPROC, FALSE)
s0(S_TRAMPOLINE, FALSE)
s0(S_MANCONSTANT, FALSE)
s0(S_ATTR_FRAMEREL, FALSE)
s0(S_ATTR_REGISTER, FALSE)
s0(S_ATTR_REGREL, FALSE)
s0(S_ATTR_MANYREG, FALSE)
s0(S_SEPCODE, FALSE)
s0(S_LOCAL_2005, FALSE)
s0(S_DEFRANGE_2005, FALSE)
s0(S_DEFRANGE2_2005, FALSE)
s0(S_SECTION, FALSE)
s0(S_COFFGROUP, FALSE)
s0(S_EXPORT, FALSE)
s0(S_CALLSITEINFO, FALSE)
s0(S_FRAMECOOKIE, FALSE)
s0(S_DISCARDED,FALSE)     
s0(S_COMPILE3,FALSE)      
s0(S_ENVBLOCK,FALSE)      
s0(S_LOCAL,FALSE)         
s0(S_DEFRANGE,FALSE)      
s0(S_DEFRANGE_SUBFIELD,FALSE) 
s0(S_DEFRANGE_REGISTER,FALSE) 
s0(S_DEFRANGE_FRAMEPOINTER_REL,FALSE) 
s0(S_DEFRANGE_SUBFIELD_REGISTER,FALSE) 
s0(S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE,FALSE) 
s0(S_DEFRANGE_REGISTER_REL,FALSE) 
s0(S_LPROC32_ID,FALSE)     
s0(S_GPROC32_ID,FALSE)     
s0(S_LPROCMIPS_ID,FALSE)   
s0(S_GPROCMIPS_ID,FALSE)   
s0(S_LPROCIA64_ID,FALSE)   
s0(S_GPROCIA64_ID,FALSE)   
s0(S_BUILDINFO,FALSE)      
s0(S_INLINESITE,FALSE)     
s0(S_INLINESITE_END,FALSE) 
s0(S_PROC_ID_END,FALSE)    
s0(S_DEFRANGE_HLSL,FALSE)  
s0(S_GDATA_HLSL,FALSE)     
s0(S_LDATA_HLSL,FALSE)     
s0(S_FILESTATIC,FALSE)     
#if defined(CC_DP_CXX) && CC_DP_CXX
s0(S_LOCAL_DPC_GROUPSHARED,FALSE) 
s0(S_LPROC32_DPC,FALSE) 
s0(S_LPROC32_DPC_ID,FALSE) 
s0(S_DEFRANGE_DPC_PTR_TAG,FALSE) 
s0(S_DPC_SYM_TAG_MAP,FALSE) 
#endif // CC_DP_CXX

s0(S_ARMSWITCHTABLE,FALSE)  
s0(S_CALLEES,FALSE) 
s0(S_CALLERS,FALSE) 
s0(S_POGODATA,FALSE) 
s0(S_INLINESITE2,FALSE) 
s0(S_HEAPALLOCSITE,FALSE) 
s0(S_MOD_TYPEREF,FALSE) 
s0(S_REF_MINIPDB,FALSE) 
s0(S_PDBMAP,FALSE)      
s0(S_GDATA_HLSL32,FALSE) 
s0(S_LDATA_HLSL32,FALSE) 
s0(S_GDATA_HLSL32_EX,FALSE) 
s0(S_LDATA_HLSL32_EX,FALSE) 
/*s0(S_RECTYPE_MAX,FALSE)*/






